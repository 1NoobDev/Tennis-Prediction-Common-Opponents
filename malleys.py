# malleys.py

A = [[1, 3, 0, 4, 0, 0],
     [3, 3, 1, 4, 0, 0],
     [4, 4, 0, 3, 1, 0],
     [6, 3, 2, 4, 0, 0],
     [16, 4, 1, 3, 1, 0],
     [6, 5, 0, 2, 2, 0],
     [10, 2, 3, 5, 0, 0],
     [40, 3, 2, 4, 1, 0],
     [30, 4, 1, 3, 2, 0],
     [4, 5, 0, 2, 3, 0],
     [5, 1, 4, 6, 0, 0],
     [50, 2, 3, 5, 1, 0],
     [100, 3, 2, 4, 2, 0],
     [5, 5, 0, 2, 4, 0],
     [1, 1, 5, 6, 0, 0],
     [30, 2, 4, 5, 1, 0],
     [150, 3, 3, 4, 2, 0],
     [200, 4, 2, 3, 3, 0],
     [75, 5, 1, 2, 4, 0],
     [6, 6, 0, 1, 5, 0],
     [1, 0, 6, 6, 0, 1],
     [36, 1, 5, 5, 1, 1],
     [225, 2, 4, 4, 2, 1],
     [400, 3,3, 3, 3, 1],
     [225, 4, 2, 2, 4, 1],
     [36, 5, 1, 1, 5, 1],
     [1, 6, 0, 0, 6, 1]
     ]

B = [[1, 3, 0, 3, 0, 0],
     [3, 3, 1, 3, 0, 0],
     [3, 4, 0, 2, 1, 0],
     [6, 2, 2, 4, 0, 0],
     [12, 3, 1, 3, 1, 0],
     [3, 4, 0, 2, 2, 0],
     [4, 2, 3, 4, 0, 0],
     [24, 3, 2, 3, 1, 0],
     [24, 4, 1, 2, 2, 0],
     [4, 5, 0, 1, 3, 0],
     [5, 1, 4, 5, 0, 0],
     [40, 2, 3, 4, 1, 0],
     [60, 3, 2, 3, 2, 0],
     [20, 4, 1, 2, 3, 0],
     [1, 5, 0, 1, 4, 0],
     [1, 0, 5, 5, 0, 1],
     [25, 1, 4, 4, 1, 1],
     [100, 2, 3, 3, 2, 1],
     [100, 3, 2, 2, 3, 1],
     [25, 4, 1, 1, 4, 1],
     [1, 5, 0, 0, 5, 1]
     ]


def d(p, q):
    return p * q / (1 - p*(1-q) + (1-p)*q)


def G(p):
    return p**4 * (15 - 4*p - (10*p**2)/(1 - 2*p * (1 - p)))


def TB(p, q):
    result = 0
    for i in range(len(A)):
        result += A[i][0] * p**A[i][1] * (1 - p)**A[i][2] * q**A[i][3] * (1 - q)**A[i][4] * d(p, q)**A[i][5]
    return result


def S(p, q):
    result = 0
    for i in range(len(B)):
        result += B[i][0] * G(p)**B[i][1] * (1-G(p))**B[i][2] * G(q)**B[i][3] * (1-G(q))**B[i][4] * (G(p)*G(q) + (G(p)*(1-G(q)) + (1-G(p))*G(q))*TB(p,q))**B[i][5]
    return result


def M3(p, q):
    return S(p, q)**2 * (1 + 2*(1 - S(p, q)))


def M5(p, q):
    return S(p,q)**3 * (1 + 3*(1-S(p,q)) + 6*(1-S(p,q))**2)